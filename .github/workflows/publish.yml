#
name: Build, Publish, and Deploy Container

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: chess-api
  REPO_NAME: kevintsander-org
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  USER_ASSIGNED_IDENTITY_NAME: mi-sander-shared-dev-01
  CONTAINER_APP_NAME: cntapp-sander-chess-dev-03
  CONTAINER_APP_ENV_NAME: cntenv-sander-chess-01
  CONTAINER_APP_CONFIG_PATH: ./.github/config/container-app.config.yml
  CONTAINER_APP_PORT: 3000
  CHESS_RESOURCE_GROUP_NAME: rg-sander-chess-dev-01
  SHARED_RESOURCE_GROUP_NAME: rg-sander-shared-dev-01
  KEYVAULT_NAME: kv-sander-shared-dev-05
  SQL_DB_NAME: chess-dev-01
  SQL_HOST: sqlsrv-sander-shared-dev-03
  SQL_PORT: 1433
  SQL_USERNAME: "sanderkt"
  SQL_PASSWORD_SECRET_NAME: chess-sql-server-admin-password
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    outputs:
      imageDigest: ${{ steps.push.outputs.digest }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        id: push
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # This step generates an artifact attestation for the image, which is an unforgeable statement about where and how it was built. It increases supply chain security for people who consume the image. For more information, see "[AUTOTITLE](/actions/security-guides/using-artifact-attestations-to-establish-provenance-for-builds)."
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  deploy:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      id-token: write
      contents: read
      packages: read
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # replace the revision suffix with the build
      - name: Replace tokens in Container config
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: ${{ env.CONTAINER_APP_CONFIG_PATH }}
          propertyPath: template.revisionSuffix
          value: ${{ github.run_id }}-${{ github.run_number }}
          commitChange: false

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create/update Container App Secret
        run: |
          az containerapp secret set \
            -n ${{ env.CONTAINER_APP_NAME }} \
            -g ${{ env.CHESS_RESOURCE_GROUP_NAME }} \
            -s ${{ env.SQL_PASSWORD_SECRET_NAME }}=keyvaultref:https://${{ env.KEYVAULT_NAME }}.vault.azure.net/secrets/${{ env.SQL_PASSWORD_SECRET_NAME }},identityref:/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.SHARED_RESOURCE_GROUP_NAME }}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/${{ env.USER_ASSIGNED_IDENTITY_NAME }}

      - name: Deploy to Azure Container Apps
        run: |
          az containerapp up \
            -n ${{ env.CONTAINER_APP_NAME }} \
            -g ${{ env.CHESS_RESOURCE_GROUP_NAME }} \
            -i ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}@${{ needs.build.outputs.imageDigest }} \
            --registry-server ${{ env.REGISTRY }} \
            --registry-username ${{ github.actor }} \
            --registry-password ${{ secrets.GITHUB_TOKEN }} \
            --env-vars \
            CHESS_SQL_DB_NAME=${{ env.SQL_DB_NAME }} \
            CHESS_SQL_HOST=${{ env.SQL_HOST }} \
            CHESS_SQL_PORT=${{ env.SQL_PORT }} \
            CHESS_SQL_USERNAME=${{ env.SQL_USERNAME }} \
            CHESS_SQL_PASSWORD=secretref:${{ env.SQL_PASSWORD_SECRET_NAME }} \
            --target-port ${{ env.CONTAINER_APP_PORT }}
